// Generated by BUCKLESCRIPT VERSION 4.0.8, PLEASE EDIT WITH CARE

import * as Dfa$ReasonReNfa from "./Dfa.bs.js";
import * as Nfa$ReasonReNfa from "./Nfa.bs.js";
import * as Glushkov$ReasonReNfa from "./Glushkov.bs.js";
import * as Brzozowski$ReasonReNfa from "./Brzozowski.bs.js";
import * as RabinScott$ReasonReNfa from "./RabinScott.bs.js";
import * as RegexParser$ReasonReNfa from "./RegexParser.bs.js";
import * as RegexParseTree$ReasonReNfa from "./RegexParseTree.bs.js";

function analyze(regexp) {
  var parsed = RegexParser$ReasonReNfa.parse(regexp);
  var glushkov = Glushkov$ReasonReNfa.compile(parsed);
  var nfa = glushkov[/* nfa */0];
  var dfa = RabinScott$ReasonReNfa.determinize(nfa);
  var reversed = Brzozowski$ReasonReNfa.reverse(dfa);
  var dfa2 = RabinScott$ReasonReNfa.determinize(reversed);
  var reversed2 = Brzozowski$ReasonReNfa.reverse(dfa2);
  var dfa_minimal = RabinScott$ReasonReNfa.determinize(reversed2);
  return /* tuple */[
          glushkov[/* nullable */2],
          glushkov[/* firsts */3],
          glushkov[/* lasts */4],
          glushkov[/* factors */5],
          glushkov[/* annotated */1],
          RegexParseTree$ReasonReNfa.of_regex(parsed),
          Nfa$ReasonReNfa.to_dot(nfa),
          Nfa$ReasonReNfa.to_matrix(nfa),
          Dfa$ReasonReNfa.to_dot(dfa),
          Dfa$ReasonReNfa.to_matrix(dfa),
          Nfa$ReasonReNfa.to_dot(reversed),
          Nfa$ReasonReNfa.to_matrix(reversed),
          Dfa$ReasonReNfa.to_dot(dfa2),
          Dfa$ReasonReNfa.to_matrix(dfa2),
          Nfa$ReasonReNfa.to_dot(reversed2),
          Nfa$ReasonReNfa.to_matrix(reversed2),
          Dfa$ReasonReNfa.to_dot(dfa_minimal),
          Dfa$ReasonReNfa.to_matrix(dfa_minimal)
        ];
}

export {
  analyze ,
  
}
/* Dfa-ReasonReNfa Not a pure module */
