// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE

import * as Char from "../node_modules/bs-platform/lib/es6/char.js";
import * as Block from "../node_modules/bs-platform/lib/es6/block.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as CharSet$ReasonReNfa from "./CharSet.bs.js";

function seq(l, r) {
  var exit = 0;
  if (typeof l === "number" && l !== 0) {
    return r;
  } else {
    exit = 1;
  }
  if (exit === 1) {
    if (typeof r === "number" && r !== 0) {
      return l;
    } else {
      return /* Seq */Block.__(2, [
                l,
                r
              ]);
    }
  }
  
}

function alt(l, r) {
  if (typeof l === "number" || l.tag || typeof r === "number" || r.tag) {
    return /* Alt */Block.__(1, [
              l,
              r
            ]);
  } else {
    return /* Char */Block.__(0, [Curry._2(CharSet$ReasonReNfa.S[/* union */6], l[0], r[0])]);
  }
}

function star(r) {
  return /* Star */Block.__(3, [r]);
}

function plus(t) {
  return seq(t, /* Star */Block.__(3, [t]));
}

function chr(c) {
  return /* Char */Block.__(0, [Curry._1(CharSet$ReasonReNfa.S[/* singleton */4], c)]);
}

function opt(t) {
  return alt(t, /* Eps */1);
}

function range_(l, h) {
  var _i = l;
  var h$1 = h;
  var _acc = CharSet$ReasonReNfa.S[/* empty */0];
  while(true) {
    var acc = _acc;
    var i = _i;
    if (i === h$1) {
      return Curry._2(CharSet$ReasonReNfa.S[/* add */3], Char.chr(i), acc);
    } else {
      _acc = Curry._2(CharSet$ReasonReNfa.S[/* add */3], Char.chr(i), acc);
      _i = i + 1 | 0;
      continue ;
    }
  };
}

function range(l, h) {
  return /* Char */Block.__(0, [range_(l, h)]);
}

var h = Char.chr(255);

var l = Char.chr(0);

var any = /* Char */Block.__(0, [range_(l, h)]);

var eps = /* Eps */1;

var empty = /* Empty */0;

export {
  seq ,
  alt ,
  star ,
  plus ,
  eps ,
  chr ,
  opt ,
  empty ,
  range_ ,
  range ,
  any ,
  
}
/* h Not a pure module */
