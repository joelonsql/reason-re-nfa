// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE

import * as $$Map from "../node_modules/bs-platform/lib/es6/map.js";
import * as List from "../node_modules/bs-platform/lib/es6/list.js";
import * as Curry from "../node_modules/bs-platform/lib/es6/curry.js";
import * as $$String from "../node_modules/bs-platform/lib/es6/string.js";
import * as CharSet$ReasonReNfa from "./CharSet.bs.js";
import * as StateSet$ReasonReNfa from "./StateSet.bs.js";
import * as Caml_builtin_exceptions from "../node_modules/bs-platform/lib/es6/caml_builtin_exceptions.js";

var M = $$Map.Make([CharSet$ReasonReNfa.S[9]]);

function to_string(char_set_map_state_set) {
  return "{" + ($$String.concat(",", List.rev(Curry._3(M[/* fold */10], (function (char_set, state_set, l) {
                          return /* :: */[
                                  CharSet$ReasonReNfa.to_string(char_set) + (":" + StateSet$ReasonReNfa.to_string(state_set)),
                                  l
                                ];
                        }), char_set_map_state_set, /* [] */0))) + "}");
}

function example(char_list, state_list) {
  return Curry._2(M[/* singleton */4], CharSet$ReasonReNfa.example(char_list), StateSet$ReasonReNfa.example(state_list));
}

function test(param) {
  if (to_string(example(/* :: */[
              /* "a" */97,
              /* :: */[
                /* "b" */98,
                /* [] */0
              ]
            ], /* :: */[
              0,
              /* :: */[
                1,
                /* [] */0
              ]
            ])) === "{{a b}:{0 1}}") {
    return 0;
  } else {
    throw [
          Caml_builtin_exceptions.assert_failure,
          /* tuple */[
            "CharSetMapStateSet.re",
            19,
            17
          ]
        ];
  }
}

export {
  M ,
  to_string ,
  example ,
  test ,
  
}
/* M Not a pure module */
