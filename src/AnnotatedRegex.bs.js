// Generated by BUCKLESCRIPT VERSION 4.0.7, PLEASE EDIT WITH CARE

import * as Block from "../node_modules/bs-platform/lib/es6/block.js";
import * as Int32 from "../node_modules/bs-platform/lib/es6/int32.js";
import * as CharSet$ReasonReNfa from "./CharSet.bs.js";

function annotate(r) {
  var annotate$1 = function (count, param) {
    if (typeof param === "number") {
      if (param === 0) {
        return /* tuple */[
                count,
                /* Empty */0
              ];
      } else {
        return /* tuple */[
                count,
                /* Eps */1
              ];
      }
    } else {
      switch (param.tag | 0) {
        case 0 : 
            var count$1 = Int32.succ(count);
            var p_000 = param[0];
            var p = /* tuple */[
              p_000,
              count$1
            ];
            return /* tuple */[
                    count$1,
                    /* Char */Block.__(0, [p])
                  ];
        case 1 : 
            var match = annotate$1(count, param[0]);
            var match$1 = annotate$1(match[0], param[1]);
            return /* tuple */[
                    match$1[0],
                    /* Alt */Block.__(1, [
                        match[1],
                        match$1[1]
                      ])
                  ];
        case 2 : 
            var match$2 = annotate$1(count, param[0]);
            var match$3 = annotate$1(match$2[0], param[1]);
            return /* tuple */[
                    match$3[0],
                    /* Seq */Block.__(2, [
                        match$2[1],
                        match$3[1]
                      ])
                  ];
        case 3 : 
            var match$4 = annotate$1(count, param[0]);
            return /* tuple */[
                    match$4[0],
                    /* Star */Block.__(3, [match$4[1]])
                  ];
        
      }
    }
  };
  return annotate$1(Int32.zero, r)[1];
}

function to_string(_annotated) {
  while(true) {
    var annotated = _annotated;
    var exit = 0;
    if (typeof annotated === "number") {
      return "";
    } else {
      switch (annotated.tag | 0) {
        case 0 : 
            var x = annotated[0];
            return CharSet$ReasonReNfa.to_string(x[0]) + ("<sub>" + (Int32.to_string(x[1]) + "</sub> "));
        case 1 : 
        case 2 : 
            exit = 1;
            break;
        case 3 : 
            _annotated = annotated[0];
            continue ;
        
      }
    }
    if (exit === 1) {
      return to_string(annotated[0]) + to_string(annotated[1]);
    }
    
  };
}

export {
  annotate ,
  to_string ,
  
}
/* CharSet-ReasonReNfa Not a pure module */
